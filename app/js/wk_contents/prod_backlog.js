"use strict";let tmp_us=[],us_update={},us_sprint_update=[];$(document).ready(e=>{function t(t){let d=`\n            <div class="container user_story rounded" id="us${t.id}">\n                <div class="d-flex justify-content-between align-items-end">\n                    <div><h4>User Story #${t.id}</h4></div>\n                    <div>\n                        <span class="btn-group">\n                            <button type="button" id="ok" class="btn btn-secondary">Edit</button>\n                            <button type="button" id="del" class="btn btn-danger">Delete</button>\n                        </span>\n                    </div>\n                </div>\n                <form>\n                    <div class="form-row">\n                        <div class="col-md-10">\n                            <label for="feat">Feature</label>\n                            <input type="text" class="form-control" id="feat" name="feature" placeholder="Enter story feature" value="${t.feature}" maxlength="256" required disabled>\n                        </div>\n                        <div class="col-md-2">\n                            <label for="est">Estimate</label>\n                            <input type="number" class="form-control" id="est" name="estimate" maxlength="256" min="0" value="${adjust_display(t.estimate)}" required disabled>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label class="pt-2" for="desc">Feature Logs</label>\n                        <textarea class="form-control mb-2" id="desc" name="description" rows="3" placeholder="Feature logs" maxlength="512" disabled>${t.logs}</textarea>\n                    </div>\n                </form>\n            </div>\n        `;e("#features").append(e(d)),e("#us"+t.id).data("id",t.id),s(e("#us"+t.id)),a(t.id,e("#us"+t.id))}function s(t){t.find("#del").on("click",()=>{if("Delete"===t.find("#del").text())d(t,!1);else{let e=remote.getGlobal("data").user_stories;for(let s in e)if(e[s].id===t.data("id")){t.find("#feat").val(e[s].feature),t.find("#desc").val(e[s].logs),t.find("#est").val(parseFloat(e[s].estimate));break}t.find("#ok").text("Edit").removeClass("btn-success").addClass("btn-secondary"),t.find("#del").text("Delete"),t.find("input, textarea").prop("disabled",!0)}}),t.find("#ok").on("click",()=>{"Ok"===t.find("#ok").text()?(t.find("form").trigger("submit"),t.find("#del").text("Delete")):(t.find("input, textarea").prop("disabled",!1),t.find("#ok").text("Ok"),t.find("#del").text("Cancel"),t.find("#ok").removeClass("btn-secondary").addClass("btn-success"),t.find('input[name="feature"]').trigger("focus"))}),t.find("form").validate({submitHandler:s=>{t.find("#ok").text("Edit").removeClass("btn-success").addClass("btn-secondary"),t.find("input, textarea, button").prop("disabled",!0),function(e){let t=remote.getGlobal("data").user_stories[e.data("id")],s=remote.getGlobal("data").user_stories;if(-1===t.sprint)return!0;let a=remote.getGlobal("data").sprints[t.sprint],d=new Decimal(a.points).minus(e.find("#est").val());for(let e in s)s[e].sprint===a.id&&s[e].id!==t.id&&(d=d.minus(s[e].estimate));return d.toNumber()>=0}(t)?i(t,s):function(t){let s=remote.getGlobal("data").user_stories[t.data("id")],a=remote.getGlobal("data").sprints[s.sprint];dialog.showMessageBox(remote.getCurrentWindow(),{title:"Scrum Assistant",type:"info",buttons:["Revert","Remove US from sprint","Add sprint points"],defaultId:2,message:`The estimate change in this user story (#${s.id}) causes sprint (#${a.id}) to contain more story points than it should. \nWhat do you want to do ?`},t=>{switch(t){case 0:!function(t){e("#us"+t.id).find("#est").val(parseFloat(t.estimate)),e("#us"+t.id).find("button").prop("disabled",!1),e("#us"+t.id).find("#ok").text("Ok"),e("#us"+t.id).find("#del").text("Cancel"),e("#us"+t.id).find("#ok").removeClass("btn-secondary").addClass("btn-success"),e("#us"+t.id).find("input, textarea, button").prop("disabled",!1),e("#us"+t.id).find('input[name="feature"]').trigger("focus")}(s);break;case 1:!function(e,t){us_sprint_update.push(e.id),ipcRenderer.send("update",{type:"us_sprint",data:{id:e.id,sprint:-1}})}(s);break;case 2:!function(t,s){us_update.hasOwnProperty(s.id)||(us_update[s.id]=[]);us_update[s.id].push(t.id);let a=new Decimal(s.points).minus(t.estimate).plus(e("#us"+t.id).find("#est").val()).toNumber(),d={id:s.id,points:a};ipcRenderer.send("update",{type:"sprint",data:d})}(s,a)}})}(t)},errorElement:"div"})}function a(t,s){for(let a of e(".user_story:not(#us"+t+")"))if(t<e(a).data("id"))return void s.detach().insertBefore(e(a));e(".user_story:not(#us"+t+")").length>0&&s.detach().insertAfter(e(".user_story:not(#us"+t+")").last())}function d(e,t){t?e.find("input, textarea, button").prop("disabled",!0):e.find("button").prop("disabled",!0),dialog.showMessageBox({title:"Scrum Assistant",type:"info",buttons:["Yes","No"],message:"Delete this User Story ?"},s=>{0===s?t?e.remove():ipcRenderer.send("delete",{type:"us",data:{id:e.data("id"),feature:e.find("#feat").val()}}):t?e.find("input, textarea, button").prop("disabled",!1):e.find("button").prop("disabled",!1)})}function i(e,t){let s={feature:t.feature.value,logs:t.description.value,estimate:parseFloat(t.estimate.value.replace(",",".")).toFixed(2),id:e.data("id")};ipcRenderer.send("update",{type:"us",data:s})}ipcRenderer.send("fetch",{type:"user_stories"}),ipcRenderer.on("fetched",(e,s)=>{if(!s.err&&!~asked_fetch.prod_backlog.indexOf(s.type)){switch(s.type){case"user_stories":!function(){let e=remote.getGlobal("data").user_stories;console.log(e);for(let s in e)t(e[s])}()}asked_fetch.prod_backlog.push(s.type)}}),ipcRenderer.on("created",(t,d)=>{if("us"===d.type)if("ok"===d.status){0===e("#us"+d.data.id).length?function(e,t){d=t.tmp_ticket,tmp_us[d]=!1,a(t.id,e),e.data("id",t.id),e.find("button").off("click"),e.find("h4").text("User Story #"+t.id),e.prop("id","us"+t.id).removeClass("new_user_story").addClass("user_story"),e.find("form").data("validator").destroy(),s(e),e.find("button").prop("disabled",!1),e.find("#est").val(adjust_display(t.estimate));var d}(e("#us_tmp"+d.data.tmp_ticket),d.data):e("#us_tmp"+d.data.tmp_ticket).remove();let t={title:"Scrum Assistant",type:"info",buttons:["Ok"]};t.message="The US #"+d.data.id+' : "'+d.data.feature+'" has been created successfully !',dialog.showMessageBox(t)}else{let t={title:"Scrum Assistant",type:"error",buttons:["Retry","Cancel"]};t.message="The US #"+d.data.id+' : "'+d.data.feature+'" could not be created.',dialog.showMessageBox(t,t=>{0===t?e("#us_tmp"+d.data.tmp_ticket).find("form").trigger("submit"):item.find("button").prop("disabled",!1)})}}),ipcRenderer.on("update",(t,s)=>{if("user_stories"===s.type&&(us_sprint_update.indexOf(s.data.id)>=0?(us_sprint_update.splice(us_sprint_update.indexOf(s.data.id),1),i(e("#us"+s.data.id),e("#us"+s.data.id).find("form")[0])):(e("#us"+s.data.id).find("#feat").val(s.data.feature),e("#us"+s.data.id).find("#desc").val(s.data.logs),e("#us"+s.data.id).find("#est").val(adjust_display(s.data.estimate))),e("#us"+s.data.id).find("button").prop("disabled",!1)),"sprints"===s.type){let t=0;for(;null!=us_update[s.data.id]&&us_update[s.data.id].length>0;)t=us_update[s.data.id].shift(),i(e("#us"+t),e("#us"+t).find("form")[0])}}),ipcRenderer.on("delete",(t,s)=>{"user_stories"===s.type&&e("#us"+s.data.id).remove()}),ipcRenderer.on("insert",(s,a)=>{"user_stories"===a.type&&0===e("#us"+a.data.id).length&&t(a.data)}),ipcRenderer.on("error",(t,s)=>{"us"===s.type&&e("#us"+s.data.id).find("button").prop("disabled",!1)}),e("#create_us").on("click",()=>{if(0!==e("#us_new").length)return void e("#us_new").find('input[name="feature"]').trigger("focus");e("#features").append(e('\n            <div class="container new_user_story rounded" id="us_new">\n                <div class="d-flex justify-content-between align-items-end">\n                    <div><h4>New User Story</h4></div>\n                    <div>\n                        <span class="btn-group">\n                            <button type="button" id="ok" class="btn btn-success">Ok</button>\n                            <button type="button" id="del" class="btn btn-danger">Delete</button>\n                        </span>\n                    </div>\n                </div>\n                <form>\n                    <div class="form-row">\n                        <div class="col-md-10">\n                            <label for="feat">Feature</label>\n                            <input type="text" class="form-control" id="feat" name="feature" placeholder="Enter story feature" maxlength="256" required>\n                        </div>\n                        <div class="col-md-2">\n                            <label for="est">Estimate</label>\n                            <input type="number" class="form-control" id="est" name="estimate" maxlength="256" min="0" value="0" required>\n                        </div>\n                    </div>\n                    <div class="form-group">\n                        <label class="pt-2" for="desc">Feature Logs</label>\n                        <textarea class="form-control mb-2" id="desc" name="description" rows="3" placeholder="Feature logs" maxlength="512"></textarea>\n                    </div>\n                </form>\n            </div>\n        ')),function(t){t.find('input[name="feature"]').trigger("focus"),t.find("#del").on("click",()=>{d(t,!0)}),t.find("#ok").on("click",()=>{e(t).find("form").trigger("submit")}),t.find("form").validate({submitHandler:e=>{t.find("#ok").text("Edit").removeClass("btn-success").addClass("btn-secondary"),t.find("input, textarea, button").prop("disabled",!0);let s=function(){let e=-1;for(e in tmp_us)if(!1===tmp_us[e])return tmp_us[e]=!0,e;return e=tmp_us.length,tmp_us[e]=!0,e}();t.prop("id","us_tmp"+s);let a={feature:e.feature.value,logs:e.description.value,estimate:parseFloat(e.estimate.value.replace(",",".")).toFixed(2),tmp_ticket:s};ipcRenderer.send("create",{type:"us",data:a})},errorElement:"div"})}(e("#us_new"))})});