"use strict";let drake=null,window_height=0;$(document).ready(t=>{function e(e){let a=`<div class="col-xl-6 spr_user_story d-flex flex-row justify-content-around rounded" id="spr_us${e.id}">\n                        <p>US#${e.id} <small class="text-muted">Estimated: ${parseFloat(e.estimate)}</small></p>\n                    </div>`;t("#spr_us").append(t(a)),t("#spr_us"+e.id).data("id",e.id),t("#spr_us"+e.id).data("estimate",new Decimal(e.estimate)),t("#spr_us"+e.id).tooltip({placement:"top",title:e.feature}),s(t("#spr_us"+e.id),e.sprint,!1)}function a(e){let a=`\n            <div class="card pj_spr" id="spr_${e.id}">\n                <div class="card-header" role="tab" id="h${e.id}">\n                    <div class="row d-flex justify-content-between">\n                        <h3 class="m-0 col-xl-3">\n                            <a data-toggle="collapse" href="#c${e.id}" aria-expanded="true" aria-controls="c${e.id}">\n                                Sprint #${e.id}\n                            </a>\n                        </h3>\n                        <h3 class="m-0 col-xl-3" id="left"></h3>\n                        <form class="form-inline m-0 col-xl-6 d-flex justify-content-center">\n                            \x3c!-- <label for="total_pts">Total sprint points</label> --\x3e\n                            <div class="form-group input-group m-0 col-lg-6">\n                                \x3c!-- <div class="input-group-addon">Points</div> --\x3e\n                                <input type="number" class="form-control form-control-sm rounded" id="total_pts" name="points" placeholder="Total points" min="0" value="${parseFloat(e.points)}" required disabled>\n                            </div>\n                            <div class="col-lg-6 row p-0 btn-group">\n                                <button type="button" class="btn btn-success col-sm-5" id='spr_total_edit'>Edit</button>\n                                <button type="button" class="btn btn-danger col-sm-7" id='spr_total_cancel' disabled>Cancel</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div id="c${e.id}" class="collapse" role="tabpanel" aria-labelledby="h${e.id}">\n                    <div class="card-body">\n                        <div class="d-flex flex-wrap spr_us_container">\n                        </div>\n                    </div>\n                </div>\n            </div>`;var s;t("#sprints_container").append(t(a)),t("#spr_"+e.id).data("spr_id",e.id).data("total",new Decimal(e.points)).data("pt_left",new Decimal(e.points)).find("#left").text("Left: "+parseFloat(e.points)),t("#spr_"+e.id).find("#total_pts").tooltip({placement:"top",title:"Total sprint points"}),t("#spr_"+e.id).find("#spr_total_edit").on("click",()=>{!function(e){let a=e.find("#spr_total_edit");"Edit"===a.text()?(a.text("Ok"),e.find("input, #spr_total_cancel").prop("disabled",!1),e.find("#total_pts").trigger("focus")):e.find("form").trigger("submit");e.find("form").validate({submitHandler:t=>{e.find("input, button").prop("disabled",!0);let a={id:e.data("spr_id"),points:parseFloat(t.points.value).toFixed(2)};ipcRenderer.send("update",{type:"sprint",data:a})},showErrors:function(e,a){t.each(a,function(e,a){t(a.element).tooltip("dispose").addClass("error").tooltip({placement:"top",title:a.message})})}})}(t("#spr_"+e.id))}),t("#spr_"+e.id).find("#spr_total_cancel").on("click",()=>{(s=t("#spr_"+e.id)).find("#spr_total_edit").text("Edit"),s.find("#spr_total_cancel").prop("disabled",!0),s.find("#total_pts").val(s.data("total").toNumber()).tooltip("dispose").tooltip({placement:"top",title:"Total sprint points"}).prop("disabled",!0)}),drake.containers.push(t("#spr_"+e.id).find(".spr_us_container")[0])}function s(e,a,s,d="#spr_us"){let r=-1===a?t("#spr_us"):t("#spr_"+a).find(".spr_us_container"),n="#spr_us"===d?t(d):t(d).find(".spr_us_container");t(e).detach().appendTo(r),i(e,r,n,s)}function i(e,a,s,i){if(!t(a).is(t(s))&&t(a).has(t(e))){let d=null,r=-1;"spr_us"!==t(s).prop("id")&&((d=t(s).parents().closest(".pj_spr")).data("pt_left",Decimal.add(d.data("pt_left"),t(e).data("estimate"))),d.find("#left").text("Left: "+d.data("pt_left").toNumber()),d.find("#total_pts").attr("min",d.data("total").minus(d.data("pt_left")).toNumber())),"spr_us"!==t(a).prop("id")&&(r=(d=t(a).parents().closest(".pj_spr")).data("spr_id"),d.data("pt_left",Decimal.sub(d.data("pt_left"),t(e).data("estimate"))),d.find("#left").text("Left: "+d.data("pt_left").toNumber()),d.find("#total_pts").attr("min",d.data("total").minus(d.data("pt_left")).toNumber())),i&&ipcRenderer.send("update",{type:"us_sprint",data:{id:t(e).data("id"),sprint:r}})}}t("#spr_us").data("spr_id",-1),window_height=t(window).height(),ipcRenderer.send("fetch",{type:"user_stories"}),ipcRenderer.on("fetched",(s,d)=>{if(!d.ret&&!~asked_fetch.spr_backlog.indexOf(d.type)){switch(d.type){case"user_stories":ipcRenderer.send("fetch",{type:"sprints"});break;case"sprints":(drake=dragula({accepts:(e,a,s,i)=>{if(t(a).is(t(s))||"spr_us"===t(a).prop("id"))return!0;let d=t(a).parents().closest(".pj_spr");return Decimal.sub(d.data("pt_left"),t(e).data("estimate")).isPositive()},moves:function(e,a,s,i){return t(e).hasClass("spr_user_story")}})).containers.push(t("#spr_us")[0]),drake.on("drop",(t,e,a,s)=>{i(t,e,a,!0)}),t(document).on("mousemove",function(e){let a=e.pageY-t(".content-page#spr_backlog").scrollTop(),s=.15*window_height,i=window_height-.15*window_height;if(1==e.which&&drake.dragging&&(a<s||a>i)){let a=e.clientY-window_height/2;a*=.1,t(".pane").scrollTop(a+t(".pane").scrollTop())}}),function(){let t=remote.getGlobal("data").sprints;for(let e in t)a(t[e])}(),function(){let t=remote.getGlobal("data").user_stories;for(let a in t)e(t[a])}()}asked_fetch.spr_backlog.push(d.type)}}),ipcRenderer.on("created",(t,e)=>{e.err&&"sprint"===e.type&&dialog.showMessageBox({title:"Scrum Assistant",type:"error",buttons:["ok"],message:"Unable to create a new sprint."},t=>{})}),ipcRenderer.on("insert",(s,i)=>{"sprints"===i.type&&0===t("#spr_"+i.data.id).length&&(a(i.data),t("#spr_"+i.data.id).find("#spr_total_edit").trigger("click")),"user_stories"===i.type&&0===t("#spr_us"+i.data.id).length&&e(i.data)}),ipcRenderer.on("delete",(e,a)=>{if("sprints"===a.type){for(let e of t("#spr_"+a.data.id).find(".spr_user_story"))s(t(e),-1,!0,"#spr_"+a.data.id);t("#spr_"+a.data.id).remove()}}),ipcRenderer.on("update",(a,i)=>{if("user_stories"===i.type)if(0===t("#spr_us"+i.data.id).length)e(i.data);else{let e=Decimal.sub(i.data.estimate,t("#spr_us"+i.data.id).data("estimate")),a=t("#spr_us"+i.data.id).parents().closest(".pj_spr");t("#spr_us"+i.data.id).data("estimate",parseFloat(i.data.estimate)),a.data("spr_id")!==i.data.sprint?s(t("#spr_us"+i.data.id),i.data.sprint,!0,"#"+a.attr("id")):-1!==i.data.sprint&&(t("#spr_"+i.data.sprint).data("pt_left",new Decimal(t("#spr_"+i.data.sprint).data("pt_left")).minus(e).toNumber()),t("#spr_"+i.data.sprint).find("#left").text("Left: "+t("#spr_"+i.data.sprint).data("pt_left"))),t("#spr_us"+i.data.id).html(`<p>US#${i.data.id} <small class="text-muted">Estimated: ${parseFloat(i.data.estimate)}</small></p>`),t("#spr_us"+i.data.id).tooltip("dispose").tooltip({placement:"top",title:i.data.feature})}if("sprints"===i.type){let e=t("#spr_"+i.data.id),a=Decimal.sub(i.data.points,e.data("total"));e.data("total",new Decimal(i.data.points)),e.data("pt_left",Decimal.add(e.data("pt_left"),a)),e.find("#total_pts").val(e.data("total").toNumber()).attr("min",Decimal.sub(e.data("total"),e.data("pt_left")).toNumber()),e.find("#left").text("Left: "+e.data("pt_left").toNumber()),e.find("#spr_total_edit").text("Edit").prop("disabled",!1)}}),ipcRenderer.on("error",(t,e)=>{console.error(e)}),t(window).resize(()=>{window_height=t(window).height()}),t("#create_sp").on("click",()=>{ipcRenderer.send("create",{type:"sprint",data:{}})}),t("#delete_sp").on("click",()=>{let e=t(".pj_spr:not(#spr_us)");0!==e.length&&ipcRenderer.send("delete",{type:"sprint",data:{id:e.last().data("spr_id")}})})});